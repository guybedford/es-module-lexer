version = 0.1

default-task = "test"

extensions = ['chomp@0.1:npm', 'chomp@0.1:footprint']

[[task]]
name = 'bench'
serial = true
deps = ['bench:js', 'bench:wasm']

[[task]]
name = 'bench:js'
run = 'cross-env BENCH=js node --expose-gc bench/index.js'

[[task]]
name = 'bench:wasm'
run = 'cross-env BENCH=wasm node --expose-gc bench/index.js'

[[task]]
name = 'build'
serial = true
deps = ['npm:install', 'build:wasm', 'build:asm', 'build:cjs']

[[task]]
name = 'build:asm'
target = 'dist/lexer.asm.js'
deps = ['src/lexer.asm.js', 'lib/lexer.asm.js']
run = '''
  echo $(cat src/lexer.asm.js)$(cat lib/lexer.asm.js) | terser -c -m -o dist/lexer.asm.js
'''

[[task]]
name = 'build:cjs'
target = 'dist/lexer.cjs'
deps = ['dist/lexer.js']
run = 'babel dist/lexer.js | terser -c -m -o dist/lexer.cjs'

[[task]]
name = 'build:wasm'
run = 'node build.js'

[[task]]
name = 'footprint'
deps = ['dist/lexer.js', 'dist/lexer.asm.js']
template = 'footprint'

[[task]]
name = 'test'
deps = ['test:js', 'test:wasm']

[[task]]
name = 'test:js'
run = 'mocha -b -u tdd test/*.cjs'

[[task]]
name = 'test:wasm'
run = 'cross-env WASM=1 mocha -b -u tdd test/*.cjs'

[[task]]
target = 'lib/lexer.wat'
dep = 'lib/lexer.wasm'
run = '../wabt/bin/wasm2wat lib/lexer.wasm -o lib/lexer.wat'

[[task]]
target = 'lib/lexer.wasm'
deps = ['src/lexer.h', 'src/lexer.c']
run = """
	../wasi-sdk-12.0/bin/clang src/lexer.c --sysroot=../wasi-sdk-12.0/share/wasi-sysroot -o lib/lexer.wasm -nostartfiles \
	"-Wl,-z,stack-size=13312,--no-entry,--compress-relocations,--strip-all,\
	--export=parse,--export=sa,--export=e,--export=ri,--export=re,--export=is,--export=ie,--export=ss,--export=ip,--export=se,--export=ai,--export=id,--export=es,--export=ee,--export=f,--export=__heap_base" \
	-Wno-logical-op-parentheses -Wno-parentheses \
	-Oz
"""

[[task]]
target = 'lib/lexer.asm.js'
deps = ['src/lexer.h', 'src/lexer.c']
run = """
  rm lib/lexer.asm.js

	emcc ./src/lexer.c -o lib/lexer.js -s WASM=0 -Oz --closure 1 \
	-s EXPORTED_FUNCTIONS=["_parse","_sa","_e","_ri","_re","_is","_ie","_ss","_ip","_se","_ai","_id","_es","_ee","_f","_setSource"] \
	-s ERROR_ON_UNDEFINED_SYMBOLS=0 -s SINGLE_FILE=1 -s TOTAL_STACK=15312 -s --separate-asm

	git checkout lib/lexer.js

	echo "Manual changes to lib/lexer.asm.js are needed for building:"
	echo "- Module[asm] -> function asmInit (global, env, buffer) { ... }"
	echo "- In EMSCRIPTEN_END_FUNCS, underscores (_) are removed from all exported function names"
	echo "- In EMSCRIPTEN_END_FUNCS, rename stackAllocate to sta, setSource to ses and parse to p"
	echo "- Manual tree shaking is applied to remove the malloc implementation to reduce the footprint (optional)"
	echo "Finally run 'chomp build:asm'"
"""

[[task]]
name = 'clean'
run = 'rm lib/*'
